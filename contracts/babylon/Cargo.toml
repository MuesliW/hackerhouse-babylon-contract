[package]
name = "babylon-contract"
edition.workspace = true
version.workspace = true
license.workspace = true
repository.workspace = true
authors.workspace = true
publish = false

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]
# See https://bheisler.github.io/criterion.rs/book/faq.html#cargo-bench-gives-unrecognized-option-errors-for-valid-command-line-options
bench = false

[[bin]]
name = "schema"
path = "src/bin/schema.rs"
bench = false

[features]
# Add feature "cranelift" to default if you need 32 bit or ARM support
default = []
# Use cranelift backend instead of singlepass. This is required for development on 32 bit or ARM machines.
cranelift = ["cosmwasm-vm/cranelift"]
# for quicker tests, cargo test --lib
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces", "cosmwasm-vm/backtraces"]
library = []

[dependencies]
babylon-proto    = { path = "../../packages/proto" }
babylon-bitcoin  = { path = "../../packages/bitcoin" }
blst             = { workspace = true }
cosmwasm-schema  = { workspace = true }
cosmwasm-std     = { workspace = true }
cw-storage-plus  = { workspace = true }
hex              = { workspace = true }
tendermint-proto = { workspace = true }
cosmos-sdk-proto = { workspace = true }
thiserror        = { workspace = true }
prost            = { workspace = true }
ics23            = { workspace = true }

[dev-dependencies]
cosmwasm-vm      = { workspace = true }
pbjson-types     = { workspace = true }
# bench dependencies
thousands        = { workspace = true }

[[bench]]
name = "main"
harness = false
