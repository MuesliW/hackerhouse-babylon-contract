# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0
  aws-s3: circleci/aws-s3@4.0

jobs:
  local-build-test:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - run:
          name: Set up Rust environment
          command: |
            rustup default nightly
            rustup component add rustfmt clippy
      - run:
          name: Build Babylon contract
          command: |
            make build
      - run:
          name: Test generating schema
          command: |
            make schema
      - run:
          name: Check formats and run unit tests
          command: |
            make test-ci

  wasm-build-check-integration:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set Rust nightly as default toolchain
          command: |
            rustup default nightly
      - run:
          name: Build optimised Wasm binary
          command: |
            make build-optimized-ci
      - run:
          name: Install cosmwasm-check
          command: |
            cargo install cosmwasm-check
      - run:
          name: Check the Wasm binary's validity against Wasm VM
          command: |
            cosmwasm-check /home/circleci/project/artifacts/babylon_contract.wasm
      - run:
          name: Integration tests based on CosmWasm
          command: |
            make integration-test
      - persist_to_workspace:
          root: /home/circleci/project/artifacts
          paths:
            - babylon_contract.wasm

  push-to-s3:
    machine:
      image: ubuntu-2204:2022.10.1
      resource_class: large
    steps:
      - attach_workspace:
          at: /tmp
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: "$AWS_REGION"
      - aws-s3/copy:
          from: /tmp/babylon_contract.wasm
          to: $S3_BUCKET_PREFIX/$CIRCLE_PROJECT_REPONAME-$CIRCLE_SHA1.wasm

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  local-tests:
    jobs:
      - local-build-test
  wasm-tests:
    jobs:
      - wasm-build-check-integration
      - push-to-s3:
          requires:
            - wasm-build-check-integration
